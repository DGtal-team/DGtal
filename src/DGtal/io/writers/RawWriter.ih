/**
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as
 *  published by the Free Software Foundation, either version 3 of the
 *  License, or  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 **/

/**
 * @file RawWriter.ih
 * @author David Coeurjolly (\c david.coeurjolly@liris.cnrs.fr )
 * Laboratoire d'InfoRmatique en Image et Syst√®mes d'information - LIRIS (CNRS, UMR 5205), CNRS, France
 *
 * @date 2010/07/22
 *
 * Implementation of inline methods defined in RawWriter.h
 *
 * This file is part of the DGtal library.
 */


//////////////////////////////////////////////////////////////////////////////
#include <cstdlib>
#include <fstream>
#include "DGtal/io/Color.h"
//////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// IMPLEMENTATION of inline methods.
///////////////////////////////////////////////////////////////////////////////


namespace DGtal {
template<typename I,typename C>
bool
RawWriter<I,C>::exportRaw8(const std::string & filename, const I & aImage,
			   const Functor & aFunctor)
{
  ofstream out;
  typename I::Domain::Vector ext = aImage.extent();
  typename I::Domain domain = aImage.domain();
  typename I::Value val;
  
  out.open(filename.c_str(), ios_base::binary);
  
  //We scan the domain 
  for(typename I::Domain::ConstIterator it = domain.begin(), itend=domain.end();
      it!=itend;
      ++it)
    {
      val = aImage( (*it) );
      out.put( static_cast<unsigned char>(aFunctor (val) ) );
    }
  
  out.close(); 

  ///@todo catch IOerror excpetion
  return true;
}

}//namespace
