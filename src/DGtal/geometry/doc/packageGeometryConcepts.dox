/**
 * @file packageGeometryConcepts.dox
 * @author David Coeurjolly (\c david.coeurjolly@liris.cnrs.fr )
 * Laboratoire d'InfoRmatique en Image et SystÃ¨mes d'information - LIRIS (CNRS, UMR 5205), CNRS, France
 *
 * @date 2012/03/16
 *
 * Documentation file for feature packageGeometryConcepts
 *
 * This file is part of the DGtal library.
 */

namespace DGtal {
//----------------------------------------
/*!
@page packageGeometryConcepts Geometry Concepts
@writers David Coeurjolly, Jacques-Olivier Lachaud

@dot
digraph GGeom   {
  rankdir=BT;
  
  subgraph cluster_ext {
      rank = same;
      style=invis;

      subgraph cluster_boost {
                 style=filled;
                 color=white;
                 node [style=filled,color=orange];
                 label="boost";

                 boost_CopyConstructible;
                 boost_DefaultConstructible;
                 boost_Assignable;
                 boost_EqualityComparable;
      }

  }
  subgraph cluster_concepts_1 {
    style=filled;
    color=lightgrey;
    node [style=filled,color=white];
               
    CSegment [ URL="\ref CSegment" ];
    CBidirectionalSegmentComputer  [ URL="\ref CBidirectionalSegmentComputer" ];
    CIncrementalSegmentComputer [ URL="\ref CIncrementalSegmentComputer" ];
    CForwardSegmentComputer [ URL="\ref CForwardSegmentComputer" ];
    CSegmentFactory [ URL="\ref CSegmentFactory" ];
    CDynamicBidirectionalSegmentComputer [ URL="\ref CDynamicBidirectionalSegmentComputer" ];
    CDynamicSegmentComputer [ URL="\ref CDynamicSegmentComputer" ];

    CBidirectionalSegmentComputer -> CForwardSegmentComputer -> CIncrementalSegmentComputer -> CSegmentFactory -> CSegment; 
    CDynamicSegmentComputer-> CForwardSegmentComputer ;
    CDynamicBidirectionalSegmentComputer->          CDynamicSegmentComputer  ;

    CDynamicBidirectionalSegmentComputer->          CBidirectionalSegmentComputer;

    label="geometry/curves (main concepts)";
  }

subgraph cluster_concepts_2 {
    style=filled;
    color=lightgrey;
    node [style=filled,color=white];
               
    CLocalPremetric [ label="CLocalPremetric"  URL="\ref CLocalPremetric" ];
    CMetric [label="CMetric" URL="@ref CMetric"];
    CSeparableMetric [label="CSeparableMetric" URL="@ref CSeparableMetric"];
    CPowerMetric [label="CPowerMetric" URL="@ref CPowerMetric"];
    CPowerSeparableMetric [label="CPowerSeparableMetric" URL="@ref CPowerSeparableMetric"];

    CPowerMetric -> CMetric;
    CMetric -> CLocalPremetric;
    CSeparableMetric -> CMetric;
    CPowerSeparableMetric -> CPowerMetric;

    label="geometry/volumes (main concepts)";
  }
 
  CLocalPremetric -> boost_CopyConstructible;
  CLocalPremetric -> boost_Assignable;
  
  CSegment -> boost_CopyConstructible ;
  CSegment -> boost_DefaultConstructible;
  CSegment -> boost_Assignable;
  CSegment -> boost_EqualityComparable;

  subgraph cluster_models {
     style=filled;
     color="#ccffcc";
     node [style=filled,color=white];
     label="geometry/surfaces (main models)";

     COBANaivePlane [ URL="\ref COBANaivePlane" ];
  }

  COBANaivePlane -> boost_CopyConstructible ;
  COBANaivePlane -> boost_DefaultConstructible;
  COBANaivePlane -> boost_Assignable;
 }
@enddot

 
*/
}
