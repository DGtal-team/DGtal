/**
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as
 *  published by the Free Software Foundation, either version 3 of the
 *  License, or  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 **/

/**
 * @file DecoratorParametricCurveTransformation.ih
 * @author Kacper Pluta (\c kacper.pluta@esiee.fr )
 * Laboratoire d'Informatique Gaspard-Monge - LIGM, A3SI, France
 *
 * @date 2014/10/10
 *
 * Implementation of inline methods defined in DecoratorParametricCurveTransformation.h
 *
 * This file is part of the DGtal library.
 */

///////////////////////////////////////////////////////////////////////////////
// IMPLEMENTATION of inline methods.
///////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
template <typename TCurve, typename TTransfromation>
inline
DGtal::DecoratorParametricCurveTransformation<TCurve, TTransfromation>::DecoratorParametricCurveTransformation
( const TCurve  & c, const TTransfromation & t ) : curve ( c ), trans ( t ) {}


///////////////////////////////////////////////////////////////////////////////
// Implementation of inline methods                                          //
template <typename TCurve, typename TTransfromation>
inline
typename DGtal::DecoratorParametricCurveTransformation<TCurve, TTransfromation>::RealPoint
DGtal::DecoratorParametricCurveTransformation<TCurve, TTransfromation>::x ( const double t ) const
{
    return trans ( curve.x ( t ) );
}

template <typename TCurve, typename TTransfromation>
inline
typename DGtal::DecoratorParametricCurveTransformation<TCurve, TTransfromation>::RealPoint
DGtal::DecoratorParametricCurveTransformation<TCurve, TTransfromation>::xp ( const double t ) const
{
  return trans ( curve.xp ( t ) );
}

///////////////////////////////////////////////////////////////////////////////
// Implementation of inline functions and external operators                 //

/**
 * Overloads 'operator<<' for displaying objects of class 'DecoratorParametricCurveTransformation'.
 * @param out the output stream where the object is written.
 * @param object the object of class 'DecoratorParametricCurveTransformation' to write.
 * @return the output stream after the writing.
 */
template <typename TCurve, typename TTransfromation>
inline
std::ostream&
DGtal::operator<< ( std::ostream & out,
                  const DecoratorParametricCurveTransformation < TCurve, TTransfromation > & object )
{
    object.selfDisplay ( out );
    return out;
}

//                                                                           //
///////////////////////////////////////////////////////////////////////////////


