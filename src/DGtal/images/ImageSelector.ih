/**
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as
 *  published by the Free Software Foundation, either version 3 of the
 *  License, or  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 **/

/**
 * @file ImageSelector.ih
 * @author David Coeurjolly (\c david.coeurjolly@liris.cnrs.fr )
 * Laboratoire d'InfoRmatique en Image et Syst√®mes d'information - LIRIS (CNRS, UMR 5205), CNRS, France
 *
 * @date 2010/07/14
 *
 * Implementation of inline methods defined in ImageSelector.h
 *
 * This file is part of the DGtal library.
 */


//////////////////////////////////////////////////////////////////////////////
#include <cstdlib>
//////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// IMPLEMENTATION of inline methods.
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
namespace DGtal {

  /**
   * ImageSelector specialization when Preferences is LOW_ITER_I+LOW_BEL_I
   */
  template <typename Domain,  typename Value>
  struct ImageSelector<Domain,  Value, LOW_ITER_I+LOW_BEL_I>
  {
    /**
     * Adequate digital set representation for the given preferences.
     */
    typedef ImageContainerBySTLMap<Domain,Value> Type;
  };


  /**
   * ImageSelector specialization when Preferences is ITKIMAGEDATA_CONTAINER_I
   */
  template <typename Domain,  typename Value>
  struct ImageSelector<Domain,  Value, ITKIMAGEDATA_CONTAINER_I>
  {
    /**
     * Adequate digital set representation for the given preferences.
     */
#ifdef WITH_ITK
    typedef ImageContainerByITKImage<Domain, Value> Type;
#else
    typedef ImageContainerBySTLVector<Domain,Value> Type;
#endif
  };

  
}
//                                                                           //
///////////////////////////////////////////////////////////////////////////////


