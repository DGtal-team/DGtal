/**
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as
 *  published by the Free Software Foundation, either version 3 of the
 *  License, or  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 **/

/**
 * @file DigitalSetConverter.ih
 * @author Jacques-Olivier Lachaud (\c jacques-olivier.lachaud@univ-savoie.fr )
 * Laboratory of Mathematics (CNRS, UMR 5807), University of Savoie, France
 *
 * @date 2010/07/09
 *
 * Implementation of inline methods defined in DigitalSetConverter.h
 *
 * This file is part of the DGtal library.
 */


//////////////////////////////////////////////////////////////////////////////
#include <cstdlib>
//////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// IMPLEMENTATION of inline methods.
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// ----------------------- Standard services ------------------------------

/**
 * Assigns input to output.
 *
 * @param output (modified) the output set.
 * @param input the input set.
 *
 * @tparam OutputDigitalSet the type of the output DigitalSet  (model
 * of CDigitalSet).
 */
template <typename OutputDigitalSet>
template <typename InputDigitalSet>
inline
void
DGtal::DigitalSetConverter<OutputDigitalSet>
::assign( OutputDigitalSet & output, const InputDigitalSet & input )
{
//   std::cerr << "Dgtal::DigitalSetConverter::assign<OutputDigitalSet,InputDigitalSet>"  << std::endl
//       << "output = " << output << std::endl
//       << "input  = " << input << std::endl;
  output.clear();
  output.insertNew( input.begin(), input.end() );
}

/**
 * Use function overloading for possible faster assignment. 
 * Assigns input to output.
 *
 * @param output (modified) the output set.
 * @param input the input set.
 */
template <typename OutputDigitalSet>
inline
void
DGtal::DigitalSetConverter<OutputDigitalSet>
::assign
( OutputDigitalSet & output, const OutputDigitalSet & input )
{
//   std::cerr << "Dgtal::DigitalSetConverter::assign<OutputDigitalSet,OutputDigitalSet>" << std::endl
//       << "output = " << output << std::endl
//       << "input  = " << input << std::endl;
  output = input;
}

//                                                                           //
///////////////////////////////////////////////////////////////////////////////


