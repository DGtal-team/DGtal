
/**
 * @file packageTopologyConcepts1.dox
 * @author Jacques-Olivier Lachaud (\c jacques-olivier.lachaud@univ-savoie.fr )
 * Laboratory of Mathematics (CNRS, UMR 5127), University of Savoie, France
 *
 * @date 2012/03/16
 *
 * Documentation file for feature packageTopologyConcepts1
 *
 * This file is part of the DGtal library.
 */

/* 
 * Useful to avoid writing DGtal:: in front of every class.
 * Do not forget to add an entry in src/DGtal/base/Config.h.in !
 */
namespace DGtal {
//----------------------------------------
/*!
@page packageTopologyConcepts1 Topology Concepts and Models (part I, models of graph)
@writers Jacques-Olivier Lachaud

 @dot   
digraph GTOPOLOGY {
    rankdir= BT

    subgraph cluster_ext {
	rank = same;
        style=invis;
        subgraph cluster_1 {
                 style=filled;
                 color="#eeeeff";
                 node [style=filled,color=white];
                 label="base";

                 CConstSinglePassRange [ label="CConstSinglePassRange" URL="\ref CConstSinglePassRange" ]; 
        }
        subgraph cluster_2 {
                 style=filled;
                 color="#ddddff";
                 node [style=filled,color=white];
                 label="graph";

		 CUndirectedSimpleGraph [ label="CUndirectedSimpleGraph" URL="\ref CUndirectedSimpleGraph" ];
		 CUndirectedSimpleLocalGraph [ label="CUndirectedSimpleLocalGraph" URL="\ref CUndirectedSimpleLocalGraph" ];

        }
        subgraph cluster_4 {
                 style=filled;
                 color="#e0eeff";
                 node [style=filled,color=white];
                 label="kernel";

                 CDigitalSet [ label="CDigitalSet" URL="\ref CDigitalSet" ]; 
        }
        subgraph cluster_5 {
                 style=filled;
                 color=white;
                 node [style=filled,color=orange];
                 label="boost";

                 boost_CopyConstructible [ label="boost::CopyConstructible" URL="\ref boost::CopyConstructible" ];
        }
    }
  
    subgraph cluster_0 {
        style=filled;
        color=lightgrey;
        node [style=filled,color=white];
        label="topology (main concepts)";

        CDigitalSurfaceContainer [ label="CDigitalSurfaceContainer" URL="\ref CDigitalSurfaceContainer" ]; 
        CDigitalSurfaceTracker [ label="CDigitalSurfaceTracker" URL="\ref CDigitalSurfaceTracker" ];
        CDomainAdjacency [ label="CDomainAdjacency" URL="\ref CDomainAdjacency" ];
	CAdjacency [ label="CAdjacency" URL="\ref CAdjacency" ];
        CCellularGridSpaceND [ label="CCellularGridSpaceND" URL="\ref CCellularGridSpaceND" ];
    }
    CDigitalSurfaceContainer -> boost_CopyConstructible;
    CDigitalSurfaceTracker -> boost_CopyConstructible;
    CDigitalSurfaceContainer -> CDigitalSurfaceTracker [label="use",style=dashed];
    CDigitalSurfaceContainer -> CCellularGridSpaceND [label="use",style=dashed];
    CUndirectedSimpleLocalGraph -> CConstSinglePassRange;
    CUndirectedSimpleGraph -> CUndirectedSimpleLocalGraph;
    CAdjacency -> CUndirectedSimpleLocalGraph; 
    CDomainAdjacency -> CAdjacency ; 
  
    subgraph cluster_models {
        style=filled;
        color="#ccffcc";
        node [style=filled,color=white];
        label="topology (main models)";

        subgraph cluster_models_0 {
            style=filled;
            color="#ccffcc";
            node [style=filled,color=white];
            label="(main graph models)";

            MetricAdjacency [ label="MetricAdjacency" URL="\ref MetricAdjacency" ];
            DomainAdjacency [ label="DomainAdjacency" URL="\ref DomainAdjacency" ];
            DigitalSurface [ label="DigitalSurface" URL="\ref DigitalSurface" ];
            Object [ label="Object" URL="\ref Object" ];
        }   

        subgraph cluster_models_2 {
            style=filled;
            color="#ccffcc";
            node [style=filled,color=white];
            label="(others)";

            KhalimskySpaceND [ label="KhalimskySpaceND" URL="\ref KhalimskySpaceND" ];
        }
    }

    Object -> CUndirectedSimpleGraph;
    Object -> CDigitalSet [label="use",style=dashed];
    MetricAdjacency -> CAdjacency;
    DomainAdjacency -> CDomainAdjacency;
    DigitalSurface -> CUndirectedSimpleGraph;
    DigitalSurface -> CDigitalSurfaceContainer [label="use",style=dashed];
    KhalimskySpaceND -> CCellularGridSpaceND;

}
@enddot

*/

}
