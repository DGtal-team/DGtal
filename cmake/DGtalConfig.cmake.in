# - Config file for the DGtal package
# It defines the following variables
#  DGTAL_INCLUDE_DIRS - include directories for DGtal
#  DGTAL_LIBRARY_DIRS - library directories for DGtal (normally not used!)
#  DGTAL_LIBRARIES    - libraries to link against
 
# Tell the user project where to find our headers and libraries
set(DGTAL_INCLUDE_DIRS "@DGTAL_INCLUDE_DIRS@;@DGtalLibInc@")
set(DGTAL_LIBRARY_DIRS "@DGTAL_LIB_DIR@")
 
# Our library dependencies (contains definitions for IMPORTED targets)
include("@DGTAL_CMAKE_DIR@/DGtalLibraryDepends.cmake")

#------------------------------------------------
#---- We propagate definitions for #define marco 
#---- according to dependencies detected during 
#---- the build.
#------------------------------------------------


set(WITH_GMP @WITH_GMP@)
set(GMP_FOUND_DGTAL @GMP_FOUND_DGTAL@)


IF(WITH_GMP AND GMP_FOUND_DGTAL)
  ADD_DEFINITIONS("-DWITH_GMP ")
  set(WITH_GMP TRUE)
ENDIF(WITH_GMP AND GMP_FOUND_DGTAL)

set(WITH_MAGICK @WITH_MAGICK@)
set(MAGICK++_FOUND @MAGICK++_FOUND@)

IF(WITH_MAGICK AND MAGICK++_FOUND)
  ADD_DEFINITIONS("-DWITH_MAGICK")
  set(WITH_MAGICK TRUE)
ENDIF(WITH_MAGICK AND MAGICK++_FOUND)

set(WITH_ITK @WITH_ITK@)
set(ITK_FOUND_DGTAL @ITK_FOUND_DGTAL@)

IF(WITH_ITK AND ITK_FOUND_DGTAL)
  ADD_DEFINITIONS("-DWITH_ITK")
  set(WITH_ITK TRUE)
  #--------------------------------------------
  #ITK bugfix (we need explicit link_directory)
  #--------------------------------------------
  link_directories( @ITK_LIBRARY_DIRS@)
ENDIF(WITH_ITK AND ITK_FOUND_DGTAL)

set(WITH_CAIRO @WITH_CAIRO@)
set(CAIRO_FOUND @CAIRO_FOUND@)

IF(WITH_CAIRO AND CAIRO_FOUND)
  set(WITH_CAIRO TRUE)
  ADD_DEFINITIONS("-DWITH_CAIRO")
ENDIF(WITH_CAIRO AND CAIRO_FOUND)


set(WITH_COIN3D-SOQT @WITH_COIN3D-SOQT@)
set(SOQT_FOUND_DGTAL @SOQT_FOUND_DGTAL@)

IF(WITH_COIN3D-SOQT AND SOQT_FOUND_DGTAL)
  ADD_DEFINITIONS("-DWITH_SOQT")
  set(WITH_SOQT TRUE)
ENDIF(WITH_COIN3D-SOQT AND SOQT_FOUND_DGTAL)

set(WITH_COIN3D-SOQT @WITH_COIN3D-SOQT@)
set(COIN3D_FOUND_DGTAL @COIN3D_FOUND_DGTAL@)
set(QT4_FOUND_DGTAL  @QT4_FOUND_DGTAL@)
set(SOQT_FOUND_DGTAL @SOQT_FOUND_DGTAL@)
IF (WITH_COIN3D-SOQT AND  COIN3D_FOUND_DGTAL AND QT4_FOUND_DGTAL AND SOQT_FOUND_DGTAL )
  ADD_DEFINITIONS("-DWITH_VISU3D_IV")
  set(WITH_VISU3D_IV TRUE)
ENDIF(WITH_COIN3D-SOQT AND  COIN3D_FOUND_DGTAL AND QT4_FOUND_DGTAL AND SOQT_FOUND_DGTAL )

set(WITH_QGLVIEWER @WITH_QGLVIEWER@ )
set(QGLVIEWER_FOUND_DGTAL @QGLVIEWER_FOUND_DGTAL@) 
set(QT4_FOUND_DGTAL @QT4_FOUND_DGTAL@)
set(QT_QTOPENGL_FOUND @QT_QTOPENGL_FOUND@)

IF(WITH_QGLVIEWER AND QGLVIEWER_FOUND_DGTAL AND QT4_FOUND_DGTAL AND QT_QTOPENGL_FOUND)
  ADD_DEFINITIONS("-DWITH_VISU3D_QGLVIEWER")
  set(WITH_VISU3D_QGLVIEWER TRUE)
ENDIF(WITH_QGLVIEWER AND QGLVIEWER_FOUND_DGTAL  AND QT4_FOUND_DGTAL AND QT_QTOPENGL_FOUND)




#-- We force the Qt rediscovering
set(WITH_COIN3D-SOQT @WITH_COIN3D-SOQT@ )
set(WITH_QGLVIEWER @WITH_QGLVIEWER@)
IF(WITH_COIN3D-SOQT OR WITH_QGLVIEWER)
  find_package(Qt4 REQUIRED COMPONENTS QtCore QtGUI QtXml QtOpenGL)
  set(QT_USE_QTXML 1)
  ADD_DEFINITIONS("-DWITH_QT4")
  set(WITH_QT4 TRUE)
  include( ${QT_USE_FILE})
  SET(DGTAL_INCLUDE_DIRS ${DGTAL_INCLUDE_DIRS} ${QT_INCLUDE_DIR} )
ENDIF(WITH_COIN3D-SOQT OR WITH_QGLVIEWER)

 
# These are IMPORTED targets created by DGtalLibraryDepends.cmake
set(DGTAL_LIBRARIES DGtal DGtalIO)

